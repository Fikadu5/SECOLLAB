<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Blogs</title>
  <link href="https://your-font-service.com/fonts/css/style.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link rel="stylesheet" href="/css/myblogs.css">

  <style>
    body.dark-mode {
      background-color:  #262626;
      color: white;
    }
    body.dark-mode .card-body {
      background-color: #161616;
    }
    .card {
      margin-bottom: 20px;
    }
    body.dark-mode p, h5, button{
      color:white !important;
    }
    /* General Button Styles */
.edit-button, .delete-button, .read-button {
  background: linear-gradient(135deg, #6b8c3f, #4CAF50); /* Default green gradient background */
  border: none; /* Remove borders */
  color: white; /* White text color */
  padding: 12px 24px; /* Add padding for a larger button */
  text-align: center; /* Center align text */
  text-decoration: none; /* Remove underline */
  display: inline-flex; /* Align items horizontally */
  align-items: center; /* Center align items vertically */
  border-radius: 50px; /* Fully rounded button */
  font-size: 16px; /* Increase font size */
  font-weight: bold; /* Bold text */
  cursor: pointer; /* Pointer cursor on hover */
  transition: background 0.3s, transform 0.3s, box-shadow 0.3s; /* Smooth transition */
}

/* Edit Button Styles */
.edit-button {
  background: linear-gradient(135deg, #4CAF50, #6b8c3f); /* Green gradient background */
}

.edit-button i {
  margin-right: 10px; /* Space between icon and text */
  font-size: 18px; /* Slightly larger icon */
}

/* Delete Button Styles */
.delete-button {
  background: linear-gradient(135deg, #e74c3c, #c0392b); /* Red gradient background */
}

.delete-button i {
  margin-right: 10px; /* Space between icon and text */
  font-size: 18px; /* Slightly larger icon */
}

/* Read Button Styles */
.read-button {
  background: linear-gradient(135deg, #3498db, #2980b9); /* Blue gradient background */
}

.read-button i {
  margin-right: 10px; /* Space between icon and text */
  font-size: 18px; /* Slightly larger icon */
}

/* Hover and Focus Effects */
.edit-button:hover, .edit-button:focus,
, .delete-button:focus,
.read-button:hover, .read-button:focus {
  background: linear-gradient(135deg, #6b8c3f, #4CAF50); /* Reverse gradient on hover/focus for default button */
  transform: translateY(-3px); /* Slightly lift button */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Add shadow for depth */
}

/* Disabled State */
.edit-button:disabled, .delete-button:disabled, .read-button:disabled {
  background: #b0b0b0; /* Light grey background for disabled state */
  cursor: not-allowed; /* Change cursor for disabled state */
  opacity: 0.6; /* Reduce opacity for disabled state */
}

  </style>
</head>

<body>

  <%- include("navigationloggedin") %>

  <%- include("sidebar") %>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

  <% if (messages && messages.success && messages.success.length > 0) { %>
    <div class="alert alert-success alert-dismissible fade show" role="alert">
      <strong>Success!</strong> <%= messages.success %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>
  
  <% if (messages && messages.error && messages.error.length > 0) { %>
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
      <strong>Error!</strong> <%= messages.error %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>
  
  <% if (messages && messages.length > 0) { %>
    <div class="alert alert-info alert-dismissible fade show" role="alert">
      <strong>Notice:</strong> <%= messages %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>
  <div class="container">
    <% if(blogs.length > 0){ %>
    <div class="row">
      <% for (let i = 0; i < blogs.length; i++) { %>
      <div class="col-12 col-sm-6 col-md-6 col-lg-4 mb-4">
        <div class="card h-100">
          <% if(blogs[i].image) {%>
          
          <img src="/uploads/blog/<%= blogs[i].image %>" class="card-img-top" alt="Blog Image">
          <% } %>
          <div class="card-body">
            <h5 class="card-title"><%= blogs[i].title %></h5>
            <p class="card-text"><%= blogs[i].subtitle %></p>
            <p class="card-text">Likes: <%= blogs[i].like %></p>
            <a href="/blogs/<%= blogs[i]._id %>"> <button class="read-button">
              <i class="fas fa-book-open"></i> Read
            </button>
          </a>
          
            
            <a href="/blogs/edit/<%= blogs[i]._id %>">  <button class="edit-button">
              <i class="fas fa-edit"></i> Edit
            </button></a>
            <form action="/blogs/delete/<%= blogs[i]._id %>" method="post" style="display:inline;">
            <button  type="submit" class="delete-button">
              <i class="fas fa-trash"></i> 
            </button>
          </form>
         
          
          </div>
        </div>
      </div>
      <% } %>
    </div>

    <!-- Pagination -->
    <nav aria-label="Page navigation">
      <ul class="pagination justify-content-center">
        <% if (pagination.currentPage > 1) { %>
        <li class="page-item">
          <a class="page-link" href="?page=<%= pagination.currentPage - 1 %>&limit=<%= pagination.limit %>" aria-label="Previous">
            <span aria-hidden="true">&laquo;</span>
          </a>
        </li>
        <% } %>
        <% for (let i = 1; i <= pagination.totalPages; i++) { %>
        <li class="page-item <%= pagination.currentPage === i ? 'active' : '' %>">
          <a class="page-link" href="?page=<%= i %>&limit=<%= pagination.limit %>"><%= i %></a>
        </li>
        <% } %>
        <% if (pagination.currentPage < pagination.totalPages) { %>
        <li class="page-item">
          <a class="page-link" href="?page=<%= pagination.currentPage + 1 %>&limit=<%= pagination.limit %>" aria-label="Next">
            <span aria-hidden="true">&raquo;</span>
          </a>
        </li>
        <% } %>
      </ul>
    </nav>
    <% } else { %>
    <h3 class="text-center">You have no blogs yet</h3>
    <div class="text-center">
      <a href="/blogs/new"><button type="button" class="btn btn-info">Add new Blog</button></a>
    </div>
    <% } %>
  </div>

  <hr>

  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js" integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy" crossorigin="anonymous"></script>
  <script src="https://kit.fontawesome.com/3259a3ed9a.js" crossorigin="anonymous"></script>
  <script src="/js/darkmode.js"></script>
  <script>
    // Function to handle the confirmation
    function handleConfirmation(event) {
      event.preventDefault(); // Prevent the default form submission or button action
  
      const isConfirmed = confirm('Are you sure you want to perform this action?');
      if (isConfirmed) {
        const form = event.target.closest('form');
        if (form) {
          form.submit(); // Submit the form if the button is inside a form
        } else {
          const href = event.target.getAttribute('href');
          if (href) {
            window.location.href = href; // Redirect if the button has an href attribute
          }
        }
      }
    }
  
    // Function to add event listeners to all buttons
    function addConfirmationListeners() {
      document.querySelectorAll('.delete-button').forEach(button => {
        button.addEventListener('click', handleConfirmation);
      });
  
    
    }
  
    // Initialize listeners when the DOM content is fully loaded
    document.addEventListener('DOMContentLoaded', addConfirmationListeners);
  </script>
  
  
</body>

</html>
